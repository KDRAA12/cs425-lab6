package edu.mum.cs.cs425.demos.studentrecordsmgmtapp;

import edu.mum.cs.cs425.demos.studentrecordsmgmtapp.model.Student;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;

public class MyStudentRecordsMgmtApp {

    public static void main(String[] args) {
        try {
            Student[] students = {
                new Student(110001, "Dave", parseDate("11/18/1951")),
                new Student(110002, "Anna", parseDate("12/07/1990")),
                new Student(110003, "Erica", parseDate("01/31/1974")),
                new Student(110004, "Carlos", parseDate("08/22/2009")),
                new Student(110005, "Bob", parseDate("03/05/1990"))
            };

            printListOfStudents(students);

            System.out.println("\nPlatinum Alumni Students:");
            printListOfStudents(getListOfPlatinumAlumniStudents(students));

        } catch (ParseException e) {
            e.printStackTrace();
        }
    }

    private static Date parseDate(String date) throws ParseException {
        return new SimpleDateFormat("MM/dd/yyyy").parse(date);
    }

    public static void printListOfStudents(Student[] students) {
        Arrays.sort(students, (s1, s2) -> s1.getName().compareTo(s2.getName()));
        for (Student student : students) {
            System.out.println("StudentId: " + student.getStudentId() + ", Name: " + student.getName() +
                    ", Date of Admission: " + student.getDateOfAdmission());
        }
    }

    public static Student[] getListOfPlatinumAlumniStudents(Student[] students) {
        return Arrays.stream(students)
                .filter(student -> {
                    Date now = new Date();
                    long diff = now.getTime() - student.getDateOfAdmission().getTime();
                    return (diff / (1000 * 60 * 60 * 24 * 365)) >= 30;
                })
                .sorted((s1, s2) -> s2.getDateOfAdmission().compareTo(s1.getDateOfAdmission()))
                .toArray(Student[]::new);
    }
}
